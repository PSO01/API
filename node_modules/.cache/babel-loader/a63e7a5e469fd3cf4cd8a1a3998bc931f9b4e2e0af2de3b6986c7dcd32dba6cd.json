{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Routes, Route } from \"react-router-dom\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Topic from './components/Topic';\nimport Create from './components/Create';\nimport Update from './components/Update';\nimport Header from './components/Header';\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [nowTopic, setNowTopic] = useState(\"Main\");\n  const [topics, setTopics] = useState([{\n    link: \"html\",\n    title: \"HTML\",\n    body: \"html is ...\",\n    img: \"img/html.png\"\n  }, {\n    link: \"css\",\n    title: \"CSS\",\n    body: \"css is ...\",\n    img: \"img/css.png\"\n  }, {\n    link: \"js\",\n    title: \"JavaScript\",\n    body: \"js is ...\",\n    img: \"img/js.png\"\n  }]);\n  const navigate = useNavigate(); // 특정 경로 설정\n  const location = useLocation(); // 현재 경로 가져옴\n\n  const current = e => {\n    const link = e.target.text;\n    topics.forEach(topic => {\n      if (topic.link === link) {\n        setNowTopic(topic);\n      }\n    });\n  };\n  const routeList = topics.map(topic => {\n    const {\n      link,\n      title,\n      body,\n      img\n    } = topic;\n    return /*#__PURE__*/_jsxDEV(Route, {\n      path: `/${link}`,\n      element: /*#__PURE__*/_jsxDEV(Topic, {\n        title: title,\n        body: body,\n        img: img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 26\n      }, this)\n    }, link, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  });\n  const onCreate = (title, body) => {\n    const newTopic = {\n      link: title.toLocaleLowerCase(),\n      title: title,\n      body: body,\n      img: \"img/create.jpg\"\n    };\n    setTopics([...topics, newTopic]);\n    navigate(`/${newTopic.link}`); // 특정 라우팅 경로로 이동\n  };\n  const onUpdate = udtopic => {\n    const newTopics = topics.map(topic => topic.link === udtopic.link ? udtopic : topic);\n    setTopics(newTopics);\n    setNowTopic(udtopic);\n    navigate(`/${udtopic.link}`);\n  };\n  const onDelete = () => {\n    setTopics(topics.filter(topic => topic.link !== nowTopic));\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {\n      topics: topics,\n      current: current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Topic, {\n          title: \"Welcome\",\n          body: \"web is ...\",\n          img: \"img/web.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), routeList, /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create\",\n        element: /*#__PURE__*/_jsxDEV(Create, {\n          onCreate: onCreate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/update\",\n        element: /*#__PURE__*/_jsxDEV(Update, {\n          nowTopic: nowTopic,\n          onUpdate: onUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      nowTopic: nowTopic,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), console.log(location)]\n  }, void 0, true);\n};\n_s(App, \"CODk3VH3HSwF5neyoJqPvBFNB+g=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","useNavigate","useLocation","Topic","Create","Update","Header","Nav","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","nowTopic","setNowTopic","topics","setTopics","link","title","body","img","navigate","location","current","e","target","text","forEach","topic","routeList","map","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onCreate","newTopic","toLocaleLowerCase","onUpdate","udtopic","newTopics","onDelete","filter","children","console","log","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Routes,Route} from \"react-router-dom\";\r\nimport {useNavigate, useLocation} from \"react-router-dom\"\r\nimport Topic from './components/Topic';\r\nimport Create from './components/Create';\r\nimport Update from './components/Update';\r\nimport Header from './components/Header';\r\nimport Nav from './components/Nav';\r\nimport Footer from './components/Footer';\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n    const [nowTopic, setNowTopic] = useState(\"Main\");\r\n\r\n    const [topics, setTopics] = useState([\r\n        {link: \"html\", title: \"HTML\", body: \"html is ...\", img: \"img/html.png\"},\r\n        {link: \"css\", title: \"CSS\", body: \"css is ...\", img: \"img/css.png\"},\r\n        {link: \"js\", title: \"JavaScript\", body: \"js is ...\", img: \"img/js.png\"}\r\n    ]);\r\n\r\n    const navigate = useNavigate();   // 특정 경로 설정\r\n    const location =  useLocation();  // 현재 경로 가져옴\r\n\r\n    const current = (e) =>{\r\n        const link = e.target.text;\r\n        topics.forEach(topic=>{\r\n            if(topic.link === link){\r\n                setNowTopic(topic);\r\n            }\r\n        });\r\n    }\r\n\r\n    const routeList = topics.map(topic => {\r\n        const {link,title,body,img} = topic;\r\n        return(\r\n            <Route \r\n                key = {link}\r\n                path={`/${link}`}\r\n                element={<Topic title={title} body={body} img={img}/>}\r\n            />\r\n        );\r\n    });\r\n\r\n    const onCreate = (title,body) =>{\r\n        const newTopic = {\r\n            link : title.toLocaleLowerCase(),\r\n            title : title,\r\n            body : body,\r\n            img : \"img/create.jpg\"\r\n        }\r\n        setTopics([...topics,newTopic]);\r\n        navigate(`/${newTopic.link}`);   // 특정 라우팅 경로로 이동\r\n    }\r\n\r\n    const onUpdate = (udtopic) =>{\r\n       const newTopics = topics.map(topic =>(\r\n        topic.link === udtopic.link ? udtopic : topic\r\n       ));\r\n       setTopics(newTopics);\r\n       setNowTopic(udtopic);\r\n       navigate(`/${udtopic.link}`);\r\n    }\r\n\r\n    const onDelete = () =>{\r\n        setTopics(topics.filter(topic=> topic.link !== nowTopic));\r\n        navigate('/');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n\r\n            <Nav topics={topics} current={current}/>\r\n\r\n            <Routes>\r\n                <Route path='/' element={<Topic title=\"Welcome\" body=\"web is ...\" img=\"img/web.png\"/>}></Route>\r\n                {routeList}\r\n                <Route path='/create' element={<Create onCreate={onCreate}/>}/>\r\n                <Route path='/update' element={<Update nowTopic={nowTopic} onUpdate={onUpdate}/>}/>\r\n            </Routes>\r\n\r\n            <Footer nowTopic={nowTopic} onDelete={onDelete}/>\r\n            {console.log(location)}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}