{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\react-app\\\\src\\\\pages\\\\Main.jsx\";\nimport React, { useState, useRef, useEffect, useMemo, useCallback } from 'react';\nimport { Routes, Route } from \"react-router-dom\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Content from '../components/Content';\nimport Create from '../components/Create';\nimport Update from '../components/Update';\nimport Header from '../components/Header';\nimport Nav from '../components/Nav';\nimport Footer from '../components/Footer';\nimport styled from 'styled-components';\n\n/* \r\n    useCallback은 리렌더링 간에 함수 정의를 캐싱해 주는 React Hook이다.\r\n\r\n    컴포넌트가 처음 렌더링 될 때 함수 객체를 생성하고 캐싱한다.\r\n    이후 리렌더링이 발생할 때, 의존성 배열에 변화가 없다면 새로운 함수를 생성하지 않고\r\n    이전에 캐싱된 함수 객체를 재사용한다.\r\n    이를 통해 불필요한 함수 재생성을 방지하고 성능을 최적화 할 수 있다.\r\n\r\n    기본 구조는 다음과 같다.\r\n    const cachedFn = useCallback(함수, 의존성배열)\r\n\r\n*/\nconst Page = () => {\n  const initTopic = () => {\n    return [{\n      link: \"/html\",\n      title: \"HTML\",\n      body: \"html is ...\",\n      img: \"img/html.png\"\n    }, {\n      link: \"/css\",\n      title: \"CSS\",\n      body: \"css is ...\",\n      img: \"img/css.png\"\n    }, {\n      link: \"/js\",\n      title: \"JavaScript\",\n      body: \"js is ...\",\n      img: \"img/js.png\"\n    }];\n  };\n  const [topics, setTopics] = useState(initTopic); // 초기값을 콜백 함수로 주면 처음 렌더링 될 때만 useState 호출\n  const currentTopic = useRef(null); // 현재 페이지에 대한 topic 저장\n  const navigate = useNavigate(); // 특정 이벤트가 발생할 때 주소를 이동시키는 기능 제공\n  const location = useLocation(); // 현재 페이지의 위치를 반환\n\n  // 렌더링될 때마다 currentTopic.current 값 변경이 이루어짐\n  useEffect(() => {\n    const newTopic = topics.find(topic => topic.link === location.pathname && (topic.link !== \"/create\" || topic.link !== \"/update\"));\n\n    // newTopic이 undefined가 아닌 경우에만 실행\n    if (newTopic) {\n      currentTopic.current = newTopic;\n    }\n  });\n\n  /* \r\n     각 topic에 대한 라우팅 경로 설정\r\n       ! 주의사항 \r\n     () => { 와 같은 화살표 함수는 useMemo가 객체가 아닌 undefined를 반환한다.\r\n     자바스크립트의 () => { 는 화살표 함수의 본문의 시작을 의미하므로,\r\n     실수를 방지하기 위해 return문을 명시적으로 작성하자.\r\n  */\n  const routeList = useMemo(() => {\n    return topics.map(topic => {\n      const {\n        link,\n        title,\n        body,\n        img\n      } = topic;\n      return /*#__PURE__*/React.createElement(Route, {\n        key: link,\n        path: link,\n        element: /*#__PURE__*/React.createElement(Content, {\n          title: title,\n          body: body,\n          img: img,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 32\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      });\n    });\n  }, [topics]);\n\n  /* \r\n      topic 삭제 기능\r\n        Page 컴포넌트가 재렌더링 되면 Page 내 모든 내부 변수가 초기화된다.\r\n      onDelete도 렌더링 시 콜백 함수를 재할당 받는다.\r\n      따라서 useCallback을 통해 콜백 함수를 메모이제이션 하도록 한다.\r\n        useEffect(() => {\r\n          console.log('onDelete 함수가 재할당되었습니다.');\r\n      }, [onDelete]); \r\n      => 확인 시 렌더링마다 함수 재할당이 이루어지고 있다.\r\n        * onDelete 함수는 topics 배열의 내부 값들이 변화할 때만 함수가 새롭게 생성되고 재할당된다.\r\n  */\n\n  const onDelete = useCallback(() => {\n    setTopics(topics.filter(topic => topic.link !== currentTopic.current.link));\n    navigate('/'); // 삭제 완료 후 메인 페이지로 이동\n  }, [topics]);\n  useEffect(() => {\n    console.log('onDelete 함수가 재할당되었습니다.');\n  }, [onDelete]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Wrapper, {\n    className: \"flex-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Nav, {\n    topics: topics,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/React.createElement(Content, {\n      title: \"Welcome\",\n      body: \"web is ...\",\n      img: \"img/web.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 42\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), routeList, /*#__PURE__*/React.createElement(Route, {\n    path: \"/create\",\n    element: /*#__PURE__*/React.createElement(Create, {\n      topics: topics,\n      setTopics: setTopics,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 48\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/update\",\n    element: /*#__PURE__*/React.createElement(Update, {\n      currentTopic: currentTopic.current,\n      topics: topics,\n      setTopics: setTopics,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 48\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    currentTopic: currentTopic.current,\n    onDelete: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }));\n};\nexport default Page;\nconst Wrapper = styled.div`\n    background-color: ${props => props.theme.mainColor};\n    color: ${props => props.theme.textColor};\n    border-bottom: 1px solid black;\n    padding: 10px;\n`;","map":{"version":3,"names":["React","useState","useRef","useEffect","useMemo","useCallback","Routes","Route","useNavigate","useLocation","Content","Create","Update","Header","Nav","Footer","styled","Page","initTopic","link","title","body","img","topics","setTopics","currentTopic","navigate","location","newTopic","find","topic","pathname","current","routeList","map","createElement","key","path","element","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onDelete","filter","console","log","Fragment","Wrapper","className","div","props","theme","mainColor","textColor"],"sources":["C:/Users/USER/Desktop/react-app/src/pages/Main.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useMemo, useCallback} from 'react';\r\nimport { Routes,Route} from \"react-router-dom\";\r\nimport {useNavigate, useLocation} from \"react-router-dom\"\r\nimport Content from '../components/Content';\r\nimport Create from '../components/Create';\r\nimport Update from '../components/Update';\r\nimport Header from '../components/Header';\r\nimport Nav from '../components/Nav';\r\nimport Footer from '../components/Footer';\r\nimport styled from 'styled-components';\r\n \r\n/* \r\n    useCallback은 리렌더링 간에 함수 정의를 캐싱해 주는 React Hook이다.\r\n\r\n    컴포넌트가 처음 렌더링 될 때 함수 객체를 생성하고 캐싱한다.\r\n    이후 리렌더링이 발생할 때, 의존성 배열에 변화가 없다면 새로운 함수를 생성하지 않고\r\n    이전에 캐싱된 함수 객체를 재사용한다.\r\n    이를 통해 불필요한 함수 재생성을 방지하고 성능을 최적화 할 수 있다.\r\n\r\n    기본 구조는 다음과 같다.\r\n    const cachedFn = useCallback(함수, 의존성배열)\r\n\r\n*/\r\nconst Page = () => {\r\n\r\n    const initTopic = () =>{\r\n        return([ \r\n            {link: \"/html\", title: \"HTML\", body: \"html is ...\", img: \"img/html.png\"},\r\n            {link: \"/css\", title: \"CSS\", body: \"css is ...\", img: \"img/css.png\"},\r\n            {link: \"/js\", title: \"JavaScript\", body: \"js is ...\", img: \"img/js.png\"}\r\n        ]);\r\n    };\r\n\r\n    const [topics, setTopics] = useState(initTopic);  // 초기값을 콜백 함수로 주면 처음 렌더링 될 때만 useState 호출\r\n    const currentTopic = useRef(null);                // 현재 페이지에 대한 topic 저장\r\n    const navigate = useNavigate();                   // 특정 이벤트가 발생할 때 주소를 이동시키는 기능 제공\r\n    const location = useLocation();                   // 현재 페이지의 위치를 반환\r\n\r\n    // 렌더링될 때마다 currentTopic.current 값 변경이 이루어짐\r\n    useEffect(() => {\r\n        const newTopic = topics.find(topic => \r\n            topic.link === location.pathname && (topic.link !== \"/create\" || topic.link !== \"/update\"));\r\n        \r\n            // newTopic이 undefined가 아닌 경우에만 실행\r\n            if(newTopic){\r\n                currentTopic.current = newTopic;\r\n            }\r\n    });\r\n\r\n     /* \r\n        각 topic에 대한 라우팅 경로 설정\r\n\r\n        ! 주의사항 \r\n        () => { 와 같은 화살표 함수는 useMemo가 객체가 아닌 undefined를 반환한다.\r\n        자바스크립트의 () => { 는 화살표 함수의 본문의 시작을 의미하므로,\r\n        실수를 방지하기 위해 return문을 명시적으로 작성하자.\r\n    */\r\n    const routeList = useMemo(() => {\r\n        return topics.map(topic => {\r\n            const {link, title , body , img } = topic;\r\n            return (\r\n                <Route \r\n                    key = {link}\r\n                    path = {link}\r\n                    element = {<Content title={title} body={body} img={img}/>}\r\n                />\r\n            );\r\n        });\r\n    },[topics]);\r\n\r\n\r\n    /* \r\n        topic 삭제 기능\r\n\r\n        Page 컴포넌트가 재렌더링 되면 Page 내 모든 내부 변수가 초기화된다.\r\n        onDelete도 렌더링 시 콜백 함수를 재할당 받는다.\r\n        따라서 useCallback을 통해 콜백 함수를 메모이제이션 하도록 한다.\r\n\r\n        useEffect(() => {\r\n            console.log('onDelete 함수가 재할당되었습니다.');\r\n        }, [onDelete]); \r\n        => 확인 시 렌더링마다 함수 재할당이 이루어지고 있다.\r\n\r\n        * onDelete 함수는 topics 배열의 내부 값들이 변화할 때만 함수가 새롭게 생성되고 재할당된다.\r\n    */\r\n\r\n    const onDelete = useCallback(() => {\r\n            setTopics(topics.filter(topic=> topic.link !== currentTopic.current.link));\r\n            navigate('/');  // 삭제 완료 후 메인 페이지로 이동\r\n    },[topics]);\r\n    \r\n\r\n    useEffect(() => {\r\n        console.log('onDelete 함수가 재할당되었습니다.');\r\n      }, [onDelete]);\r\n\r\n    return (\r\n        <>\r\n            <Wrapper className='flex-between'>\r\n                <Header />\r\n                <Nav topics={topics}/>\r\n            </Wrapper>\r\n\r\n            <Routes>\r\n                <Route path='/' element={<Content title=\"Welcome\" body=\"web is ...\" img=\"img/web.png\"/>}></Route>\r\n                {routeList}\r\n                <Route path='/create' element={<Create topics={topics} setTopics={setTopics}/>}/>\r\n                <Route path='/update' element={<Update currentTopic={currentTopic.current} topics={topics} setTopics={setTopics}/>}/>\r\n            </Routes>\r\n\r\n            <Footer currentTopic={currentTopic.current} onDelete={onDelete} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Page;\r\n\r\nconst Wrapper = styled.div`\r\n    background-color: ${props => props.theme.mainColor};\r\n    color: ${props => props.theme.textColor};\r\n    border-bottom: 1px solid black;\r\n    padding: 10px;\r\n`;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}